{"version":3,"sources":["pages/Home/index.jsx","pages/About/index.jsx","components/Todo/styles.js","components/Todo/index.js","pages/Dashboard/index.jsx","App.js","server.js","reportWebVitals.js","index.js"],"names":["Home","About","Container","styled","label","Todo","todo","onCheck","onUncheck","type","defaultChecked","done","onChange","e","target","checked","id","text","Dashboard","useState","reminders","setReminders","updateTodo","fetch","method","body","JSON","stringify","useEffect","then","response","json","console","log","map","r","BasicExample","to","exact","path","createServer","models","reminder","Model","seeds","server","db","loadData","routes","this","namespace","get","schema","all","put","request","params","attReminder","parse","requestBody","findBy","update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEO,SAASA,IACd,OACE,8BACE,wCCHC,SAASC,IACd,OACE,8BACE,yC,sBCHOC,E,MAAYC,EAAOC,MAAV,+CCEf,SAASC,EAAT,GAA6C,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,UACpC,OACE,eAACN,EAAD,WACE,uBACAO,KAAK,WACHC,eAAgBJ,EAAKK,KACrBC,SAAU,SAAAC,GACLA,EAAEC,OAAOC,QACVR,EAAQ,CACNS,GAAIV,EAAKU,GACTC,KAAMX,EAAKW,KACXN,MAAM,IAGRH,EAAU,CACRQ,GAAIV,EAAKU,GACTC,KAAMX,EAAKW,KACXN,MAAM,OAKbL,EAAKW,QCtBL,SAASC,IACd,MAAoCC,mBAAS,IAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KAEA,SAASC,EAAWhB,GAClBiB,MAAM,kBAAD,OAAmBjB,EAAKU,IAAM,CAACQ,OAAQ,MAAOC,KAAMC,KAAKC,UAAUrB,KACxEiB,MAAM,kBAGR,SAAShB,EAAQD,GACfgB,EAAWhB,GAGb,SAASE,EAAUF,GACjBgB,EAAWhB,GAab,OAVAsB,qBAAU,WACRL,MAAM,kBACHM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUV,EAAaU,EAAKX,gBACnC,IAEHQ,qBAAU,WACRI,QAAQC,IAAIb,KACX,CAACA,IAGF,gCACE,2CACCA,EAAUc,KAAI,SAAAC,GAAC,OACd,cAAC9B,EAAD,CACEC,KAAM6B,EAEN5B,QAASA,EACTC,UAAWA,GAFN2B,EAAEnB,U,YCpBF,SAASoB,IACtB,OACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAIJ,uBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAACvC,EAAD,MAEF,cAAC,IAAD,CAAOuC,KAAK,SAAZ,SACE,cAACtC,EAAD,MAEF,cAAC,IAAD,CAAOsC,KAAK,aAAZ,SACE,cAACrB,EAAD,cC9CVsB,YAAa,CACXC,OAAQ,CACNC,SAAUC,KAGZC,MALW,SAKLC,GACJA,EAAOC,GAAGC,SAAS,CACjB3B,UAAW,CACT,CAAEJ,GAAI,EAAGC,KAAM,eAAgBN,MAAM,GACrC,CAAEK,GAAI,EAAGC,KAAM,qBAAsBN,MAAM,GAC3C,CAAEK,GAAI,EAAGC,KAAM,WAAYN,MAAM,OAKvCqC,OAfW,WAeD,IAAD,OACPC,KAAKC,UAAY,MAEjBD,KAAKE,IAAI,cAAc,WACrB,OAAO,EAAKC,OAAOC,IAAI,eAUzBJ,KAAKK,IAAI,kBAAkB,SAACF,EAAQG,GAClC,IAAMvC,EAAKuC,EAAQC,OAAOxC,GACpByC,EAAc/B,KAAKgC,MAAMH,EAAQI,aACvC,OAAOP,EAAOhC,UAAUwC,OAAO,CAAE5C,OAAM6C,OAAOJ,SCnCtD,IAYeK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.df39b36a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function Home() {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport function About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.label`\r\n  display: block;\r\n`\r\n","import React from 'react'\r\n\r\nimport { Container } from './styles'\r\n\r\nexport function Todo({ todo, onCheck, onUncheck }) {\r\n  return (\r\n    <Container>\r\n      <input\r\n      type=\"checkbox\"\r\n        defaultChecked={todo.done}\r\n        onChange={e => {\r\n          if(e.target.checked){\r\n            onCheck({\r\n              id: todo.id,\r\n              text: todo.text,\r\n              done: true\r\n            })\r\n          } else {\r\n            onUncheck({\r\n              id: todo.id,\r\n              text: todo.text,\r\n              done: false\r\n            })\r\n          }\r\n        }}\r\n      />\r\n      {todo.text}\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Todo } from '../../components/Todo'\r\n\r\nexport function Dashboard() {\r\n  const [ reminders, setReminders ] = useState([])\r\n\r\n  function updateTodo(todo){\r\n    fetch(`/api/reminders/${todo.id}`, {method: 'PUT', body: JSON.stringify(todo)})\r\n    fetch(\"/api/reminders\")\r\n  }\r\n\r\n  function onCheck(todo){\r\n    updateTodo(todo)\r\n  }\r\n\r\n  function onUncheck(todo){\r\n    updateTodo(todo)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/reminders\")\r\n      .then((response) => response.json())\r\n      .then((json) => setReminders(json.reminders))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(reminders)\r\n  }, [reminders])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n      {reminders.map(r => (\r\n        <Todo\r\n          todo={r}\r\n          key={r.id}\r\n          onCheck={onCheck}\r\n          onUncheck={onUncheck}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { Home } from './pages/Home'\nimport { About } from './pages/About'\nimport { Dashboard } from './pages/Dashboard'\n\nimport { init } from './server'\n\ninit()\n\nexport default function BasicExample() {\n  return (\n    <BrowserRouter>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n","import { createServer, Model } from 'miragejs'\r\n\r\nexport function init() {\r\n  createServer({\r\n    models: {\r\n      reminder: Model\r\n    },\r\n\r\n    seeds(server) {\r\n      server.db.loadData({\r\n        reminders: [\r\n          { id: 1, text: \"Walk the dog\", done: false },\r\n          { id: 2, text: \"Take out the trash\", done: true },\r\n          { id: 3, text: \"Work out\", done: false },\r\n        ]\r\n      })\r\n    },\r\n\r\n    routes() {\r\n      this.namespace = 'api'\r\n\r\n      this.get('/reminders', () => {\r\n        return this.schema.all('reminder')\r\n      })\r\n\r\n      /*\r\n      this.post('/reminders', (schema, request) => {\r\n        const data = JSON.parse(request.requestBody)\r\n        return schema.create('reminder', data)\r\n      })\r\n      */\r\n\r\n      this.put('/reminders/:id', (schema, request) => {\r\n        const id = request.params.id\r\n        const attReminder = JSON.parse(request.requestBody)\r\n        return schema.reminders.findBy({ id }).update(attReminder)\r\n      })\r\n    }\r\n  })\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}